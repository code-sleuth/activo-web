default: &defaults
    docker:
        - image: gcr.io/${GCLOUD_ACTIVO_PROJECT}/activo-web-ci-image
          auth:
            username: _json_key
            password: '${SERVICE_ACCOUNT}'
          environment:
            ACTIVO_PATH: /home/circleci/activo-web
            CC_TEST_REPORTER_ID: ${CC_TEST_REPORTER_ID}
    # specify working directory
    working_directory: ~/activo-web

release_default: &release_defaults
  docker:
    - image: gcr.io/${GCLOUD_ACTIVO_PROJECT}/activo-web-ci-image
      auth:
        username: _json_key
        password: '${SERVICE_ACCOUNT}'
  working_directory: ~/activo-web

cmd_update_npm: &cmd_update_npm
    run:
     name: Update npm to latest stable version
     command: |
        sudo npm install -g npm
cmd_restore_cache: &cmd_restore_cache
    restore_cache:
            keys:
            - activo-dependencies-{{ checksum "package.json" }}
cmd_install_dependencies: &cmd_install_dependencies
    run:
      name: Install dependencies
      command: |
        yarn install
cmd_install_dependencies: &cmd_save_cache
    save_cache:
        key: activo-dependencies-{{ checksum "yarn.lock" }}
        paths:
          - node_modules

cmd_download_cc_test_reporter: &cmd_download_cc_test_reporter
  run:
    name:  Download cc-test-reporter
    command: |
      mkdir -p tmp/
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
      chmod +x /tmp/cc-test-reporter

cmd_attach_workspace: &cmd_attach_workspace
  attach_workspace:
    at: tmp/

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - *cmd_update_npm
      - *cmd_install_dependencies
      - *cmd_save_cache
        
  end_to_end_tests:
    <<: *defaults
    steps:
        - checkout
        - *cmd_update_npm
        - *cmd_install_dependencies
        - *cmd_save_cache
        - run:
            name: Append hosts
            command: |
              sudo bash -c 'cat <<EOF >> /etc/hosts
              127.0.0.1 activo-dev.andela.com
              EOF'
        - run:
            name: create .env file
            command: |
              sudo cat <<EOF > /home/circleci/activo-web/.env
              NODE_ENV=development
              ANDELA_AUTH_HOST=http://api-staging.andela.com
              AUTH_REDIRECT_URL=https://activo-web-${ENV_NAME}.andela.com
              EOF

        - run:
            name: Run end to end tests
            command: yarn test:e2e

  unit_tests:
    <<: *defaults
    steps:
        - checkout
        - *cmd_restore_cache
        - *cmd_install_dependencies
        - *cmd_save_cache
        - run:
            name: Run unit tests
            command: yarn test:unit

  upload-coverage:
    <<: *defaults
    steps:
      - checkout
      - *cmd_download_cc_test_reporter
      - *cmd_attach_workspace
      - run:
          name: Upload coverage results to Code Climate
          command: |
            /tmp/cc-test-reporter sum-coverage -p 1 -o /tmp/codeclimate.total.json tmp/codeclimate.*.json
            /tmp/cc-test-reporter upload-coverage -i /tmp/codeclimate.total.json
            sed -n -e 24p /tmp/codeclimate.total.json

  bake_image:
      <<: *defaults
      steps:
        - checkout
        - run:
            name: bake image
            command: |
                  if [[ "${CIRCLE_BRANCH}" == "develop" ||  "${CIRCLE_BRANCH}" == "master" ]]; then
                    bash .circleci/bake.sh
                  fi
        - persist_to_workspace:
            root: workspace
            paths:
              - output

  bake_image_sandbox:
      <<: *defaults
      steps:
        - checkout
        - run:
            name: bake image
            command: |
                  if [[ "${CIRCLE_BRANCH}" =~ "sandbox" ]]; then
                    bash .circleci/bake.sh
                  fi
        - persist_to_workspace:
            root: workspace
            paths:
              - output

  release_to_sandbox:
    <<: *release_defaults
    steps:
      - run: exit 0

  release_to_staging:
    <<: *release_defaults
    steps:
      - run: exit 0

  release_to_production:
    <<: *release_defaults
    steps:
      - run: exit 0

  deploy_sandbox:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/activo-web/workspace
      - deploy:
          name: Deploy service
          command: |
            if [[ "${CIRCLE_BRANCH}" != "master" || "${CIRCLE_BRANCH}" != "develop" ]]; then
              bash .circleci/deploy.sh
            fi
  deploy_staging:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/activo-web/workspace
      - deploy:
          name: Deploy service
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              bash .circleci/deploy.sh
            fi
  
  deploy_production:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/activo-web/workspace
      - deploy:
          name: Deploy service
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              bash .circleci/deploy.sh
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - end_to_end_tests:
          requires:
            - build
      - unit_tests:
          requires:
            - build
      - bake_image:
          filters:
            branches:
              only:
                - master
                - develop
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*/
      - bake_image_sandbox:
          filters:
            branches:
              only:
                - /^(.*?(\bsandbox\b)[^$]*)$/
      - release_to_sandbox:
          requires:
            - unit_tests
            - bake_image_sandbox
          filters:
            branches:
              only: /^(.*?(\bsandbox\b)[^$]*)$/
      - deploy_sandbox:
          requires:
            - release_to_sandbox
          filters:
            branches:
              only: /^(.*?(\bsandbox\b)[^$]*)$/

      - release_to_staging:
          requires:
            - unit_tests
            - bake_image
          filters:
            branches:
              only: develop
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*/
      - deploy_staging:
          requires:
            - release_to_staging
          filters:
            branches:
              only: develop
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*/

      - release_to_production:
          requires:
            - unit_tests
            - bake_image
          filters:
            branches:
              only: master
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*/

      - deploy_production:
          requires:
            - release_to_production
          filters:
            branches:
              only: master
            tags:
              only:
                - /v[0-9]+(\.[0-9]+)*/
